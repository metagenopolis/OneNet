% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Main_functions.R
\name{all_inferences_new}
\alias{all_inferences_new}
\title{Perform network inference with several methods}
\usage{
all_inferences_new(
  data,
  rep.num = 100,
  methods = c("PLNnetwork", "SpiecEasi", "gCoda", "EMtree", "Magma", "SPRING", "ZiLN"),
  fast = FALSE,
  parallel = FALSE,
  ...
)
}
\arguments{
\item{data}{Count data set.}

\item{rep.num}{Number of subsamples.}

\item{methods}{Vector of characters indicating with which methods the inference should be
performed among "PLNnetwork","SpiecEasi","gCoda","EMtree","Magma", "ZiLN", and "SPRING".}

\item{fast}{Boolean for the fast computation of OneNet (without PLNnetwork)}

\item{parallel}{Boolean for the computation of OneNet with all methods parallelized}

\item{...}{
  Arguments passed on to \code{\link[=just_EMtree]{just_EMtree}}
  \describe{
    \item{\code{n.levels}}{Size of probability grid.}
    \item{\code{cores}}{Number of cores for parallel computation.}
    \item{\code{edge_thresh}}{Threshold on selection frequencies to set the number of selected edges.}
    \item{\code{Offset}}{Vector of offsets.}
    \item{\code{covar}}{Covariate data set.}
    \item{\code{spring}}{Boolean: should the latent covariance matrix be estimated using the rank-based estimator from the SPRING method?}
    \item{\code{subsample.ratio}}{The subsampling ratio. The default value is 10*sqrt(n)/n when n>144 and 0.8 when n<=144, where n is the sample size.}
  }}
}
\value{
A list of outputs from the desired individual methods.
}
\description{
Perform network inference with several methods
}
\details{
For details of the arguments used by the different methods, see the just_*() functions (e.g. \code{\link[=just_PLN]{just_PLN()}} and \code{\link[=just_EMtree]{just_EMtree()}})
*
}
\examples{
data("liver")
abund<-liver$abundances
meta=liver$metadata
taxo <- liver$taxonomy
counts_from_table<-get_count_table(abund.table=abund, mgs=taxo$msp_name,
prev.min=0.9, verbatim=FALSE)$data
some_inferences<-all_inferences_new(data=counts_from_table, rep.num=4)
str(some_inferences, max.level=1)
}
