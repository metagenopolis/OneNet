% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SimuEval.R
\name{new_synth_data}
\alias{new_synth_data}
\title{Simulate data from some empirical count dataset.}
\usage{
new_synth_data(
  real_data,
  graph_type = "cluster",
  must_connect = TRUE,
  graph = NULL,
  n = 300,
  plot = TRUE,
  seed = 10010,
  r = 50,
  dens = 4,
  k = 3,
  verbose = TRUE,
  signed = FALSE
)
}
\arguments{
\item{real_data}{Empirical real dataset.}

\item{graph_type}{Structure type for the conditional dependency structure (among "cluster","erdos", "tree", and "scale-free").}

\item{must_connect}{Boolean to force the output graph to be connected.}

\item{graph}{Optional graph to be used. Must have rownames and colnames and reference all features from real_data}

\item{n}{Number of samples to simulate.}

\item{plot}{Boolean for displaying the simulated network.}

\item{seed}{Seed number for data generation (rmvnorm).}

\item{r}{For cluster structure: controls the within/between ratio connection probability.}

\item{dens}{Graph density (for cluster graphs) or edges probability (for erd√∂s-renyi graphs).}

\item{k}{For cluster structure: number of groups}

\item{verbose}{Boolean controlling the verbosity.}

\item{signed}{Boolean for simulating both positive and negative partial correlations. Default is to FALSE, which implies only negative partial correlations.}
}
\value{
A list containing the simulated discrete counts, the corresponding true partial
correlation matrix from the latent Gaussian layer of the model and the original graph
structure that was used.
}
\description{
Simulate data from some empirical count dataset.
}
\examples{
data("liver")
real_data<-liver$abundances
meta=liver$metadata
taxo=liver$taxonomy
count_data<-get_count_table(abund.table=real_data,  prev.min=0.9)$data
simulation<-new_synth_data(count_data, graph_type="cluster",n=50, plot=TRUE)
str(simulation, max.level=1)
## Use prespecified matrix and use only part of the data
G <- diag(nrow = nrow(real_data)) ## 1990  x 1990 matrix
dimnames(G) <- list(taxo$msp_name , taxo$msp_name)
simulation<-new_synth_data(count_data, graph = G, n=50, plot=FALSE)
str(simulation, max.level=1)
}
